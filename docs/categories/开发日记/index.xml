<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发日记 on 🆈🅴🅾🅿︎</title>
    <link>https://solobit.cn/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0/</link>
    <description>Recent content in 开发日记 on 🆈🅴🅾🅿︎</description>
    <image>
      <title>🆈🅴🅾🅿︎</title>
      <url>https://solobit.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://solobit.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 07 Mar 2024 11:34:24 +0800</lastBuildDate>
    <atom:link href="https://solobit.cn/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQLite获取毫秒时间戳</title>
      <link>https://solobit.cn/post/sqlite%E8%8E%B7%E5%8F%96%E6%AF%AB%E7%A7%92%E6%97%B6%E9%97%B4%E6%88%B3/</link>
      <pubDate>Thu, 07 Mar 2024 11:34:24 +0800</pubDate>
      <guid>https://solobit.cn/post/sqlite%E8%8E%B7%E5%8F%96%E6%AF%AB%E7%A7%92%E6%97%B6%E9%97%B4%E6%88%B3/</guid>
      <description>先说结论 SQLite 获取毫秒级时间戳可以通过拼接的方式：
-- 通过 SQLite 内置函数拼凑毫秒时间戳 SELECT (strftime(&amp;#39;%s&amp;#39;, &amp;#39;now&amp;#39;) * 1000 + substr(strftime(&amp;#39;%f&amp;#39;, &amp;#39;now&amp;#39;),4,3)) AS milliseconds; --&amp;gt;结果：1709783374677 唠叨一下我在干什么 最近在开发中使用到了 SQLite 来讲数据保存到本地，并有条件的将数据同步到云端。所以我设计了表结果如下：
服务端表 CREATE TABLE `book` ( `id` int NOT NULL AUTO_INCREMENT, `local_id` bigint NOT NULL COMMENT &amp;#39;用户本地数据表id&amp;#39;, `uid` int NOT NULL COMMENT &amp;#39;所属用户&amp;#39;, other columns... PRIMARY KEY (`id`), UNIQUE KEY `user_local_data_idx` (`local_id`,`uid`) USING BTREE ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci; 客户端 SQLite 表 CREATE TABLE book	( id TIMESTAMP PRIMARY KEY, other columns.</description>
    </item>
  </channel>
</rss>
